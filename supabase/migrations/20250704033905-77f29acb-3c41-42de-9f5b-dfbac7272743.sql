
-- CORRE√á√ÉO EMERGENCIAL DEFINITIVA - SISTEMA DESAFIOS DI√ÅRIOS

-- ETAPA 1: REMO√á√ÉO TOTAL E DEFINITIVA DOS CONSTRAINTS PROBLEM√ÅTICOS
-- Remover TODOS os constraints check existentes que est√£o causando problemas
ALTER TABLE public.quiz_prompt_controls DROP CONSTRAINT IF EXISTS quiz_prompt_controls_difficulty_check;
ALTER TABLE public.quiz_prompt_controls DROP CONSTRAINT IF EXISTS quiz_prompt_controls_difficulty_fkey;
ALTER TABLE public.quiz_prompt_controls DROP CONSTRAINT IF EXISTS quiz_prompt_controls_category_fkey;
ALTER TABLE public.quiz_prompt_controls DROP CONSTRAINT IF EXISTS quiz_prompt_controls_modality_fkey;

-- ETAPA 2: LIMPEZA TOTAL DA TABELA
-- Limpar dados existentes para come√ßar do zero
DELETE FROM public.quiz_prompt_controls;
DELETE FROM public.daily_quiz_questions WHERE prompt_control_id IS NOT NULL;

-- ETAPA 3: INSER√á√ÉO SEGURA DE PROMPTS COM DADOS V√ÅLIDOS
-- Buscar dados EXATOS das tabelas para garantir compatibilidade
INSERT INTO public.quiz_prompt_controls (
  name, category, difficulty, modality, prompt_template, is_active, created_by, usage_count, success_rate
) 
SELECT 
  ms.name || ' - ' || d.description || ' - ' || im.name AS name,
  ms.name AS category,
  d.description AS difficulty,
  im.name AS modality,
  'Crie uma pergunta de verdadeiro/falso sobre ' || ms.name || ' com n√≠vel de dificuldade ' || d.description || ' baseada em ' || im.name || '.

A pergunta deve ser:
- Clara e objetiva para estudantes de medicina
- Clinicamente relevante e educativa
- Apropriada para o n√≠vel ' || d.description || '
- Focada em conceitos importantes de ' || ms.name || '

Use terminologia m√©dica adequada ao n√≠vel de dificuldade especificado.' AS prompt_template,
  true AS is_active,
  '00000000-0000-0000-0000-000000000000'::uuid AS created_by,
  0 AS usage_count,
  0.0 AS success_rate
FROM 
  public.medical_specialties ms
  CROSS JOIN public.difficulties d
  CROSS JOIN public.imaging_modalities im
WHERE 
  ms.id <= 3  -- Primeiras 3 especialidades
  AND d.id <= 2  -- Primeiras 2 dificuldades
  AND im.id <= 2; -- Primeiras 2 modalidades

-- ETAPA 4: INSERIR PROMPTS ESPEC√çFICOS TESTADOS MANUALMENTE
INSERT INTO public.quiz_prompt_controls (
  name, category, difficulty, modality, prompt_template, is_active, created_by, usage_count, success_rate
) VALUES 
(
  'Cardiologia Iniciante',
  'Cardiologia',
  'Iniciante',
  'Radiografia',
  'Crie uma pergunta de verdadeiro/falso sobre Cardiologia para n√≠vel Iniciante usando Radiografia.

Foque em conceitos b√°sicos:
- Anatomia card√≠aca normal no RX de t√≥rax
- Silhueta cardiovascular
- Sinais radiol√≥gicos elementares
- Fundamentos da cardiologia

Mantenha linguagem simples e educativa.',
  true,
  '00000000-0000-0000-0000-000000000000'::uuid,
  0,
  0.0
),
(
  'Pneumologia Intermedi√°rio',
  'Pneumologia', 
  'Intermedi√°rio',
  'Tomografia Computadorizada',
  'Elabore uma quest√£o verdadeiro/falso sobre Pneumologia de n√≠vel Intermedi√°rio baseada em Tomografia Computadorizada.

Aborde aspectos intermedi√°rios:
- Padr√µes tomogr√°ficos pulmonares comuns
- Diagn√≥stico diferencial b√°sico
- Correla√ß√£o cl√≠nico-radiol√≥gica
- Conceitos de pneumologia aplicada

Use terminologia t√©cnica apropriada.',
  true,
  '00000000-0000-0000-0000-000000000000'::uuid,
  0,
  0.0
);

-- ETAPA 5: VALIDA√á√ÉO DO SISTEMA
-- Verificar se os dados foram inseridos corretamente
DO $$
DECLARE
  prompt_count INTEGER;
  valid_data_count INTEGER;
BEGIN
  -- Contar prompts inseridos
  SELECT COUNT(*) INTO prompt_count FROM public.quiz_prompt_controls;
  
  -- Verificar se todos os dados s√£o v√°lidos comparando com as tabelas
  SELECT COUNT(*) INTO valid_data_count 
  FROM public.quiz_prompt_controls qpc
  WHERE EXISTS (SELECT 1 FROM public.medical_specialties ms WHERE ms.name = qpc.category)
    AND EXISTS (SELECT 1 FROM public.difficulties d WHERE d.description = qpc.difficulty)
    AND EXISTS (SELECT 1 FROM public.imaging_modalities im WHERE im.name = qpc.modality);
  
  -- Log dos resultados
  RAISE NOTICE '‚úÖ CORRE√á√ÉO EMERGENCIAL CONCLU√çDA';
  RAISE NOTICE 'üìä Prompts inseridos: %', prompt_count;
  RAISE NOTICE '‚úÖ Prompts com dados v√°lidos: %', valid_data_count;
  
  IF prompt_count > 0 AND valid_data_count = prompt_count THEN
    RAISE NOTICE 'üéâ SISTEMA TOTALMENTE FUNCIONAL!';
  ELSE
    RAISE NOTICE '‚ö†Ô∏è Verificar inconsist√™ncias nos dados';
  END IF;
END
$$;
